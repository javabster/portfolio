{"version":3,"sources":["images/profile.png","components/app/Wrapper.jsx","components/shared/Button.jsx","components/nav-bar/ButtonRow.jsx","actions/applicationActions.js","components/nav-bar/NavBar.jsx","components/nav-bar/ThemeButtons.jsx","components/body/Body.jsx","components/body/AboutBody.jsx","components/shared/Tile.jsx","components/shared/Heading.jsx","components/body/BlogsBody.jsx","components/body/TalksBody.jsx","reducers/applicationReducer.js","utils/backendApi.js","styles/themes.js","components/app/App.js","utils/utils.js","serviceWorker.js","index.js"],"names":["module","exports","styled","div","props","theme","background","button","type","tileBtn","clicked","btnMain","accent","setTheme","setTabOpen","tab","setMobile","mobile","setAbout","res","data","setTalks","setBlogs","NavBar","useContext","AppContext","state","dispatch","ButtonRow","className","Button","tabOpen","onClick","actions","about","title","blogs","talks","ThemeButtons","mode","color","bodyMain","AboutBody","useState","socialColour","setSocialColour","useEffect","isMobile","style","display","justifyContent","Body","width","padding","heading","height","objectFit","src","require","fontSize","alignItems","lineHeight","description","margin","bgColor","url","target","data-testid","gridTemplateColumns","gridTemplateTows","gridArea","paddingLeft","paddingRight","Tile","content","buttonText","Date","published","toLocaleDateString","year","month","day","window","open","link","h1","BlogsBody","Heading","textAlign","flexDirection","flexWrap","blogsList","map","blog","idx","key","TalksBody","talksList","talk","defaultState","applicationReducer","action","axios","getData","method","response","console","log","message","lightTheme","font","bar","innerBar","bubble","diamond","timelineShadow","darkTheme","createContext","App","useReducer","aboutRes","talksRes","blogsRes","fetchData","parseInt","document","body","clientWidth","Provider","value","Wrapper","setBody","marginTop","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.6dc8a804.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.ac7a8fd6.png\";","import styled from 'styled-components';\n\nexport default styled.div`\n    background-color: ${props => props.theme.background};\n    min-height: 100vh;\n    margin-top: 0;\n    padding: 20px;\n    width: 100vw;\n    box-sizing: border-box;\n`;","import styled from 'styled-components';\n\nexport default styled.button`\n    background-color: ${props => {\n    if (props.type === 'tile') return props.theme.tileBtn;\n    else if (props.clicked === false) return props.theme.btnMain;\n    else if (props.clicked === true) return props.theme.accent;\n  }\n  };\n    margin: 10px;\n    min-height: ${props => {\n    if (props.type === 'small') return '30px';\n    else return '40px';\n  }\n  };\n    \n    height: ${props => {\n    if (props.type === 'small') return '10px';\n    else return '50px';\n  }\n  };\n    min-width: ${props => {\n    if (props.type === 'small') return '20px';\n    else return '100px';\n  }\n  };\n    padding: '0 20px 0 20px';\n    font-size: ${props => {\n    if (props.type === 'small') return '0.70rem';\n    else return '1rem';\n  }\n  };\n    border: none;\n    font-family: 'IBM Plex Sans';\n    color: ${props => {\n    if (props.type === 'tile') return 'white';\n    if (props.clicked === false) return props.theme.accent;\n    else if (props.clicked === true) return props.theme.background;\n  }\n  };\n    text-align: center;\n\n    box-shadow: ${props => {\n    if (props.clicked === false) return `5px 5px 0px ${props.theme.accent};`\n    else if (props.clicked === true) return `3px 3px 0px ${props.theme.btnMain}`;\n  }\n  };\n\n    transform: ${props => {\n    if (props.clicked === false) return 'translate(0em,-0.2em)';\n  }\n  };\n\n    &:focus {\n    outline: none;\n    }\n\n`","import styled from 'styled-components';\n\nexport default styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    min-height: 100px;\n    width:100%;\n    padding-top: 20px;\n    justify-content: center;\n`","export const setTheme = (theme) => {\n    return {\n        type: setTheme,\n        theme: theme\n    }\n}\n\nexport const setTabOpen = (tab) => {\n    return {\n        type: setTabOpen,\n        tab: tab\n    }\n}\n\nexport const setMobile = (mobile) => {\n    return {\n        type: setMobile,\n        mobile: mobile\n    }\n}\n\nexport const setAbout = (res) => {\n    return {\n        type: setAbout,\n        data: res\n    }\n}\n\nexport const setTalks = (res) => {\n    return {\n        type: setTalks,\n        data: res\n    }\n}\n\nexport const setBlogs = (res) => {\n    return {\n        type: setBlogs,\n        data: res\n    }\n}\n","import React, { useContext } from 'react';\nimport Button from '../shared/Button';\nimport ButtonRow from './ButtonRow';\n\nimport { AppContext } from '../app/App';\nimport * as actions from '../../actions/applicationActions';\n\nexport default function NavBar(props) {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <ButtonRow className='nav-bar-row'>\n      <Button\n        type='nav-bar'\n        clicked={state.tabOpen === 'about'}\n        onClick={() => { dispatch(actions.setTabOpen('about')); }}>\n        {state.about.title}\n      </Button>\n      <Button\n        type='nav-bar'\n        clicked={state.tabOpen === 'blogs'}\n        onClick={() => { dispatch(actions.setTabOpen('blogs')); }}>\n        {state.blogs.title}\n      </Button>\n      <Button\n        type='nav-bar'\n        clicked={state.tabOpen === 'talks'}\n        onClick={() => { dispatch(actions.setTabOpen('talks')); }}>\n        {state.talks.title}\n      </Button>\n    </ButtonRow>\n  )\n};\n","import React, { useContext } from 'react';\nimport ButtonRow from './ButtonRow';\nimport Button from '../shared/Button';\nimport { AppContext } from '../app/App';\nimport * as actions from '../../actions/applicationActions';\n\nexport default function ThemeButtons(props) {\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <ButtonRow >\n      <Button\n        type='small'\n        clicked={state.mode === 'light'}\n        onClick={() => dispatch(actions.setTheme('light'))}>\n        Light Mode\n      </Button>\n      <Button\n        type='small'\n        clicked={state.mode === 'dark'}\n        onClick={() => dispatch(actions.setTheme('dark'))}>\n        Dark Mode\n      </Button>\n    </ButtonRow>\n  )\n}","import styled from 'styled-components';\n\nexport default styled.div`\n    min-height: 100px;\n    height: auto;\n    padding: 25px;\n    color: ${props => props.theme.color};\n    margin: 20px;\n    background-color: ${props => props.theme.bodyMain\n    };\n    box-shadow: ${props => `5px 5px 0px ${props.theme.accent};\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly`\n    };\n\n`","import React, { useState, useContext, useEffect } from 'react';\nimport { AppContext } from '../app/App';\nimport { SocialIcon } from 'react-social-icons';\nimport './AboutBody.scss';\nimport Body from './Body';\n\nexport default function AboutBody(props) {\n    const { state } = useContext(AppContext);\n    const [socialColour, setSocialColour] = useState('#8093F1')\n\n    useEffect(() => {\n        (state.mode === 'light') ? setSocialColour('#8093F1') : setSocialColour('#DFE4FB')\n    }, [state.mode])\n\n    return (\n        <div>\n            {state.isMobile ?\n                <div style={{\n                    display: 'inline-grid'\n                }}>\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\n                        <Body style={{ width: '100%', padding: 'unset' }}>\n                            <h1>{state.about.heading}</h1>\n                        </Body>\n                    </div>\n                    <Body style={{ padding: '0' }}>\n                        <img style={{ height: '100%', width: '100%', objectFit: 'cover' }} src={require('../../images/profile.png')} />\n                    </Body>\n                    <Body style={{ fontSize: 'x-large', alignItems: 'center', lineHeight: '2em' }}>\n                        {state.about.description}\n                        <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\n                            <SocialIcon style={{ margin: '10px' }} bgColor={socialColour} url='https://www.linkedin.com/in/abby-mitchell/' target=\"_blank\"></SocialIcon>\n                            <SocialIcon style={{ margin: '10px' }} data-testid='github-link' bgColor={socialColour} url='https://github.com/javabster' target=\"_blank\"></SocialIcon>\n                            <SocialIcon style={{ margin: '10px' }} bgColor={socialColour} url='https://twitter.com/javabster' target=\"_blank\"></SocialIcon>\n                        </div>\n                    </Body>\n                </div >\n                :\n                <div style={{\n                    display: 'inline-grid', gridTemplateColumns: 'repeat(5, 1fr)',\n                    gridTemplateTows: 'repeat(5, 1fr)'\n                }}>\n                    <Body style={{ padding: '0', gridArea: '1 / 1 / 5 / 3' }}>\n                        <img style={{ height: '100%', width: '100%', objectFit: 'cover' }} src={require('../../images/profile.png')} />\n                    </Body>\n                    <div style={{ gridArea: '1 / 3 / 2 / 6', display: 'flex', justifyContent: 'center' }}>\n                        <Body style={{ paddingLeft: '50px', paddingRight: '50px', width: '50%' }}>\n                            <h1 style={{ fontSize: '50px', lineHeight: '55px' }}>{state.about.heading}</h1>\n                        </Body>\n                    </div>\n                    <Body style={{ gridArea: '2 / 3 / 5 / 6', fontSize: 'x-large', alignItems: 'center', lineHeight: '2em' }}>\n                        {state.about.description}\n                        <div style={{ width: '50%', padding: '20px', display: 'flex', justifyContent: 'space-evenly' }}>\n                            <SocialIcon style={{ padding: '10px' }} bgColor={socialColour} url='https://www.linkedin.com/in/abby-mitchell/' target=\"_blank\"></SocialIcon>\n                            <SocialIcon style={{ padding: '10px' }} data-testid='github-link' bgColor={socialColour} url='https://github.com/javabster' target=\"_blank\"></SocialIcon>\n                            <SocialIcon style={{ padding: '10px' }} bgColor={socialColour} url='https://twitter.com/javabster' target=\"_blank\"></SocialIcon>\n                        </div>\n                    </Body>\n                </div >\n            }\n        </div>\n    )\n}\n","import React from 'react';\nimport Body from '../body/Body';\nimport Button from './Button';\n\nexport default function Tile(props) {\n    const { content, buttonText, width } = props;\n\n    return (\n        <Body style={{ width: width }}>\n            <h2>{content.title}</h2>\n            <h3>{new Date(content.published).toLocaleDateString('en-GB', { year: 'numeric', month: 'long', day: 'numeric' })}</h3>\n            <Button type='tile'\n                clicked={false}\n                onClick={() => { window.open(content.link, '_blank', 'noopener,noreferrer') }}>\n                {buttonText}\n            </Button>\n        </Body>\n    )\n}","import styled from 'styled-components';\n\nexport default styled.h1`\n    color: ${props => props.theme.color};\n`","import React, { useContext } from 'react';\nimport { AppContext } from '../app/App';\nimport Tile from '../shared/Tile';\nimport Heading from '../shared/Heading';\n\nexport default function BlogsBody(props) {\n    const { state } = useContext(AppContext);\n\n    return (\n        <div>\n            <Heading style={{ textAlign: 'center', margin: '20px' }}>Articles (first author)</Heading>\n            <div style={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'space-evenly',\n                flexWrap: 'wrap'\n            }}>\n                {state.blogs.blogsList.map((blog, idx) => {\n                    if (blog.type == 'author') {\n                        return <Tile content={blog} buttonText='Read Me!' key={idx} width={state.isMobile ? '100%' : '25%'}></Tile>\n                    }\n                })}\n            </div>\n            <Heading style={{ textAlign: 'center', margin: '50px' }}>Other Articles (co-author/editor)</Heading>\n            <div style={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'space-evenly',\n                flexWrap: 'wrap'\n            }}>\n                {state.blogs.blogsList.map((blog, idx) => {\n                    if (blog.type != 'author') {\n                        return <Tile content={blog} buttonText='Read Me!' key={idx} width={state.isMobile ? '100%' : '25%'}></Tile>\n                    }\n                })}\n            </div>\n        </div >\n    )\n}","import React, { useContext } from 'react';\nimport { AppContext } from '../app/App';\n\nimport Tile from '../shared/Tile'\nimport Heading from '../shared/Heading';\n\nexport default function TalksBody(props) {\n    const { state } = useContext(AppContext);\n\n    return (\n        <div>\n            <Heading style={{ textAlign: 'center', margin: '20px' }}>Quantum Computing Talks</Heading>\n            <div style={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'space-evenly',\n                flexWrap: 'wrap'\n            }}>\n                {state.talks.talksList.map((talk, idx) => {\n                    if (talk.type === 'quantum')\n                        return <Tile key={idx} content={talk} buttonText='Watch Me!' width={state.isMobile ? '100%' : '25%'}></Tile>\n                })}\n            </div>\n            <Heading style={{ textAlign: 'center', margin: '50px' }}>Other Talks</Heading>\n            <div style={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'space-evenly',\n                flexWrap: 'wrap'\n            }}>\n                {state.talks.talksList.map((talk, idx) => {\n                    if (talk.type != 'quantum')\n                        return <Tile key={idx} content={talk} buttonText='Watch Me!' width={state.isMobile ? '100%' : '25%'}></Tile>\n                })}\n            </div>\n        </div>\n    )\n}","import * as actions from '../actions/applicationActions';\n\nexport const defaultState = {\n    mode: 'light',\n    tabOpen: 'about',\n    isMobile: null,\n    about: {\n        title: null,\n        description: null,\n        heading: null,\n    },\n    talks: {\n        title: null,\n        talksList: [],\n    },\n    blogs: {\n        title: null,\n        blogsList: [],\n    },\n}\n\nexport default function applicationReducer(state, action) {\n    switch (action.type) {\n        case actions.setTheme: {\n            return {\n                ...state,\n                mode: action.theme\n            }\n        }\n        case actions.setTabOpen: {\n            return {\n                ...state,\n                tabOpen: action.tab\n            }\n        }\n        case actions.setMobile: {\n            return {\n                ...state,\n                isMobile: action.mobile\n            }\n        }\n        case actions.setAbout: {\n            return {\n                ...state,\n                about: action.data\n            }\n        }\n        case actions.setTalks: {\n            return {\n                ...state,\n                talks: {\n                    title: 'Speaking',\n                    talksList: action.data\n                }\n            }\n        }\n        case actions.setBlogs: {\n            return {\n                ...state,\n                blogs: {\n                    title: 'Writing',\n                    blogsList: action.data\n                }\n            }\n        }\n        default:\n            return state\n    }\n}\n","const axios = require('axios');\n\n// for running locally:\nconst baseURL = 'http://localhost:5000/';\n\n// for production:\n// const baseURL = 'https://javabster-portfolio-backend.herokuapp.com/';\n\nexport const getData = async (type) => {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: `${baseURL}api/${type}`\n        });\n        console.log(response)\n        if (response.data) {\n            return response.data\n        }\n        return []\n    }\n    catch (err) {\n        console.log(err.message)\n    }\n}\n","export const lightTheme = {\n  background: '#DFE4FB', //lilac\n  accent: '#45050C', //dark red\n  bodyMain: '#FFFFFF', //white\n  btnMain: '#8093F1', //purple\n  font: 'IBM Plex Sans',\n  bar: '#DFE4FB', //lilac\n  innerBar: '#FF2E33', //bright red\n  bubble: '#45050C', //dark red\n  diamond: '#8093F1', //purple\n  timelineShadow: '#8093F1', //purple\n  tileBtn: '#2EBFA5' //green\n}\n\nexport const darkTheme = {\n  background: '#38023B', //dark purple\n  accent: '#DFE4FB', //lilac\n  bodyMain: '#8093F1', //purple\n  btnMain: '#8093F1', //purple\n  font: 'IBM Plex Sans',\n  color: 'white',\n  bar: '#DFE4FB', //lilac\n  innerBar: '#38023B', //dark purple\n  bubble: '#FF2E33', //bright red\n  diamond: '#38023B', //lilac\n  timelineShadow: '#38023B', //darkpurple\n  tileBtn: '#2EBFA5' // green\n}","import React, { useEffect, createContext, useReducer, useState } from 'react';\nimport Wrapper from './Wrapper';\nimport NavBar from '../nav-bar/NavBar';\nimport ThemeButtons from '../nav-bar/ThemeButtons';\n\nimport AboutBody from '../body/AboutBody'\nimport BlogsBody from '../body/BlogsBody';\nimport TalksBody from '../body/TalksBody';\n\nimport applicationReducer, { defaultState } from '../../reducers/applicationReducer';\nimport * as actions from '../../actions/applicationActions';\n\nimport { getData } from '../../utils/backendApi';\n\nimport './App.css';\nimport { lightTheme, darkTheme } from '../../styles/themes';\nimport { ThemeProvider } from 'styled-components';\nimport { isMobileDevice } from '../../utils/utils';\n\nconst AppContext = createContext(null)\n\nfunction App() {\n  const [state, dispatch] = useReducer(applicationReducer, defaultState);\n  const [isMobile, setIsMobile] = useState();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const aboutRes = await getData('about');\n      dispatch(actions.setAbout(aboutRes));\n\n      const talksRes = await getData('talks');\n      dispatch(actions.setTalks(talksRes));\n\n      const blogsRes = await getData('blogs');\n      dispatch(actions.setBlogs(blogsRes));\n    }\n    fetchData();\n    const mobile = isMobileDevice();\n    dispatch(actions.setMobile(mobile));\n  }, [])\n\n  function setBody(type) {\n    switch (type) {\n      case 'about':\n        return <AboutBody />\n      case 'talks':\n        return <TalksBody />\n      case 'blogs':\n        return <BlogsBody />\n      default:\n        return <AboutBody />\n    }\n  }\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      <ThemeProvider theme={state.mode === 'light' ? lightTheme : darkTheme}>\n        <Wrapper>\n          <div>\n            <NavBar></NavBar>\n            {setBody(state.tabOpen)}\n            <div style={{ display: 'flex', flexDirection: 'row', marginTop: '10px', justifyContent: 'center' }}>\n              <ThemeButtons></ThemeButtons>\n            </div>\n          </div>\n        </Wrapper>\n      </ThemeProvider>\n    </AppContext.Provider>\n  );\n}\n\nexport { AppContext, App };\n","export const isMobileDevice = () => {\n    return parseInt(document.body.clientWidth) <= 1024;\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}